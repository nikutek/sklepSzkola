generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Example {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    password      String
    emailVerified Boolean @default(false)
    verificationToken String @default("token")
    image         String?
    accounts      Account[]
    sessions      Session[]
    orders        Order[]
    favoriteProducts favoriteProducts[]
}

model favoriteProducts {
  id Int @id @default(autoincrement())
  user_id String
  user User @relation(fields: [user_id], references: [id])
  product_id Int
  product Product @relation(fields: [product_id], references: [product_id])

  @@index([user_id])
  @@index([product_id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  category_id   Int      @id @default(autoincrement())
  name         String
  products     Product[]
}

model Product {
  product_id   Int      @id @default(autoincrement())
  name         String
  price        Float
  quantity     Float
  description  String
  isDigital    Boolean
  mainImage    String
  images       Image[]
  categories   Category[]
  orders       Order[]
  favorites    favoriteProducts[]
}

model Image {
  image_id Int @id @default(autoincrement())
  source String
  product_id Int
  product Product @relation(fields: [product_id], references: [product_id])

  @@index([product_id])
}


model Order {
    order_id     Int      @id @default(autoincrement())
    products     Product[]
    user         String
    user_id      User     @relation(fields: [user], references: [id])
    order_date   DateTime
    shipped_date DateTime?
    address      String
    postal       String
    post         String

    @@index([user])
}


